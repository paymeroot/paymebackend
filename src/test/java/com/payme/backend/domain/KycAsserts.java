package com.payme.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KycAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKycAllPropertiesEquals(Kyc expected, Kyc actual) {
        assertKycAutoGeneratedPropertiesEquals(expected, actual);
        assertKycAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKycAllUpdatablePropertiesEquals(Kyc expected, Kyc actual) {
        assertKycUpdatableFieldsEquals(expected, actual);
        assertKycUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKycAutoGeneratedPropertiesEquals(Kyc expected, Kyc actual) {
        assertThat(expected)
            .as("Verify Kyc auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKycUpdatableFieldsEquals(Kyc expected, Kyc actual) {
        assertThat(expected)
            .as("Verify Kyc relevant properties")
            .satisfies(e -> assertThat(e.getReference()).as("check reference").isEqualTo(actual.getReference()))
            .satisfies(e -> assertThat(e.getTypePiece()).as("check typePiece").isEqualTo(actual.getTypePiece()))
            .satisfies(e -> assertThat(e.getNumberPiece()).as("check numberPiece").isEqualTo(actual.getNumberPiece()))
            .satisfies(e -> assertThat(e.getPhotoPieceUrl()).as("check photoPieceUrl").isEqualTo(actual.getPhotoPieceUrl()))
            .satisfies(e -> assertThat(e.getPhotoSelfieUrl()).as("check photoSelfieUrl").isEqualTo(actual.getPhotoSelfieUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKycUpdatableRelationshipsEquals(Kyc expected, Kyc actual) {}
}
